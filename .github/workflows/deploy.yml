name: Deploy

on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-push-deploy:

    concurrency:
      group: delpoy
      cancel-in-progress: true

    runs-on: windows-latest
    environment: aws
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWSACCESSKEYID }}
      #     aws-secret-access-key: ${{ secrets.AWSSECRETKEY }}
      #     aws-region: us-east-1

      # - name: Build, tag, and push image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: game-launcher
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -f Launcher.Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: windows run
        run: |
          docker run mcr.microsoft.com/windows/servercore:ltsc2022

      # - name: Upload game.zip file to bucket
      #   uses: zdurham/s3-upload-github-action@master
      #   with:
      #     args: --acl public-read
      #   env:
      #     FILE: ./game.zip
      #     AWS_REGION: 'us-east-1'
      #     S3_BUCKET: ${{ secrets.AWSS3BUCKET }}
      #     S3_KEY: game.zip
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWSACCESSKEYID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWSSECRETKEY }}
